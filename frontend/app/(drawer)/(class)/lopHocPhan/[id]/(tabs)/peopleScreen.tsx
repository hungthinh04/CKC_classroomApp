import { useLopHocPhan } from "@/context/_context";
import { useAuth } from "@/stores/useAuth";
import { router, useFocusEffect } from "expo-router";
import { useCallback, useState } from "react";
import {
  Alert,
  Button,
  FlatList,
  Text,
  View,
  Image,
  TouchableOpacity,
} from "react-native";

type User = {
  maSV: number;
  tenSV: string;
  avatar?: string;
};

type GiangVien = {
  maGV: number;
  tenGV: string;
};

export default function PeopleScreen() {
  const { id } = useLopHocPhan();
  const { user } = useAuth();
  const [users, setUsers] = useState<User[]>([]);
  const [gv, setGv] = useState<GiangVien | null>(null);

  const isGV = user?.role === 1;

  const fetchData = async () => {
    try {
      const res = await fetch(
        `http://192.168.1.101:3000/lophocphan/thanhphan?maLHP=${id}`
      );
      const data = await res.json();
      setUsers(data.sinhViens || []);
      setGv(data.giangVien || null);
    } catch (err) {
      console.error("‚ùå L·ªói l·∫•y danh s√°ch:", err);
    }
  };

  useFocusEffect(
    useCallback(() => {
      fetchData();
    }, [id])
  );

  const handleAdd = (type: "sinhvien" | "giangvien") => {
    Alert.prompt(
      `Th√™m ${type === "sinhvien" ? "sinh vi√™n" : "gi·∫£ng vi√™n"}`,
      "Nh·∫≠p email ng∆∞·ªùi d√πng:",
      async (email) => {
        if (!email) return;

        try {
          const res = await fetch(
            `http://192.168.1.101:3000/lophocphan/${id}/add-${type}`,
            {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({ email }),
            }
          );

          const result = await res.json();
          if (res.ok) {
            Alert.alert("‚úÖ Th√†nh c√¥ng", result.message);
            fetchData();
          } else {
            Alert.alert("‚ùå Th·∫•t b·∫°i", result.message || "C√≥ l·ªói x·∫£y ra");
          }
        } catch (err) {
          Alert.alert("‚ùå L·ªói k·∫øt n·ªëi", "Kh√¥ng th·ªÉ k·∫øt n·ªëi m√°y ch·ªß");
        }
      }
    );
  };

  const handleRemoveSinhVien = (maSV: number) => {
    Alert.alert("X√°c nh·∫≠n", "B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a sinh vi√™n kh·ªèi l·ªõp?", [
      { text: "H·ªßy", style: "cancel" },
      {
        text: "X√≥a",
        style: "destructive",
        onPress: async () => {
          try {
            const res = await fetch(
              `http://192.168.1.104:3000/lophocphan/${id}/remove-sinhvien`,
              {
                method: "DELETE",
                headers: {
                  "Content-Type": "application/json",
                },
                body: JSON.stringify({ maSV }),
              }
            );
            const result = await res.json();
            if (res.ok) {
              Alert.alert("‚úÖ", "ƒê√£ xo√° sinh vi√™n");
              fetchData();
            } else {
              Alert.alert("‚ùå", result.message || "L·ªói x·∫£y ra");
            }
          } catch (err) {
            Alert.alert("‚ùå", "Kh√¥ng th·ªÉ k·∫øt n·ªëi m√°y ch·ªß");
          }
        },
      },
    ]);
  };

  return (
    <View style={{ padding: 16 }}>
      {/* Hi·ªÉn th·ªã gi·∫£ng vi√™n */}
      {gv && (
        <View
          style={{
            marginBottom: 20,
            backgroundColor: "#1f2937",
            padding: 12,
            borderRadius: 8,
          }}
        >
          <Text style={{ color: "#fff", fontWeight: "bold" }}>
            üë®‚Äçüè´ Gi·∫£ng vi√™n: {gv.tenGV}
          </Text>
          <Text style={{ color: "#ccc" }}>M√£ GV: {gv.maGV}</Text>
        </View>
      )}

      {/* N√∫t th√™m ng∆∞·ªùi */}
      {isGV && (
        <View style={{ gap: 12, marginBottom: 12 }}>
          <Button
            title="üì® M·ªùi gi·∫£ng vi√™n"
            onPress={() => router.push(`/addgiangvien?maLHP=${id}`)}
          />
          <Button
            title="üì® M·ªùi sinh vi√™n"
            onPress={() => router.push(`/addsinhvien?maLHP=${id}`)}
          />
        </View>
      )}

      {/* Danh s√°ch sinh vi√™n */}
      {users.length === 0 ? (
        <Text style={{ color: "#888" }}>
          Kh√¥ng c√≥ sinh vi√™n n√†o trong l·ªõp h·ªçc ph·∫ßn n√†y.
        </Text>
      ) : (
        <FlatList
          data={users}
          keyExtractor={(item) => item.maSV.toString()}
          renderItem={({ item }) => (
            <View
              style={{
                flexDirection: "row",
                alignItems: "center",
                padding: 10,
                backgroundColor: "#2a2a2a",
                marginBottom: 8,
                borderRadius: 6,
              }}
            >
              <Image
                source={{
                  uri:
                    item.avatar || "https://i.pravatar.cc/300?u=" + item.maSV,
                }}
                style={{
                  width: 40,
                  height: 40,
                  borderRadius: 20,
                  marginRight: 12,
                  backgroundColor: "#444",
                }}
              />
              <View style={{ flex: 1 }}>
                <Text style={{ color: "#fff", fontWeight: "bold" }}>
                  {item.tenSV}
                </Text>
                <Text style={{ color: "#aaa" }}>M√£ SV: {item.maSV}</Text>
              </View>
              {isGV && (
                <Button
                  title="‚ùå Xo√°"
                  color="red"
                  onPress={() => handleRemoveSinhVien(item.maSV)}
                />
              )}
              <View style={{ flex: 1 }} />
            </View>
          )}
        />
      )}
    </View>
  );
}
